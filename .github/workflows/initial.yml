# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 13
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run unit tests
        run: ./gradlew test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          files: build/test-results/**/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set environment variables
        run: echo Expirations time set to $EXPIRATION_TIME!
        env:
          SECRET: SECRET
          EXPIRATION_TIME: EXPIRATION_TIME